nedorezov@GARRO:/mnt/e/netology-devops-homeworks$ ssh 158.160.48.44
Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.0-91-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun Dec 31 10:57:07 AM UTC 2023

  System load:  0.39892578125      Processes:                151
  Usage of /:   69.8% of 29.44GB   Users logged in:          1
  Memory usage: 15%                IPv4 address for docker0: 172.17.0.1
  Swap usage:   0%                 IPv4 address for eth0:    10.0.1.4

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

4 updates can be applied immediately.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


Last login: Sun Dec 31 06:12:07 2023 from 37.195.178.7
nedorezov@controller-0:~$ cd ansible_role_lighthouse/
nedorezov@controller-0:~/ansible_role_lighthouse$ molecule test -s fullstack
nedorezov@controller-0:~/ansible_role_lighthouse$ molecule test -s fullstack
INFO     fullstack scenario test matrix: dependency, lint, cleanup, destroy, syntax, create, prepare, converge, idempotence, side_effect, verify, cleanup, destroy
INFO     Performing prerun...
INFO     Set ANSIBLE_LIBRARY=/home/nedorezov/.cache/ansible-compat/70adeb/modules:/home/nedorezov/.ansible/plugins/modules:/usr/share/ansible/plugins/modules
INFO     Set ANSIBLE_COLLECTIONS_PATH=/home/nedorezov/.cache/ansible-compat/70adeb/collections:/home/nedorezov/.ansible/collections:/usr/share/ansible/collections
INFO     Set ANSIBLE_ROLES_PATH=/home/nedorezov/.cache/ansible-compat/70adeb/roles:/home/nedorezov/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles
INFO     Running fullstack > dependency
Starting galaxy role install process
- changing role nginx from 0.24.2 to 0.24.2
- extracting nginx to /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx
- nginx (0.24.2) was installed successfully
- changing role ansible_role_clickhouse from 1.13 to 1.13
- extracting ansible_role_clickhouse to /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse
- ansible_role_clickhouse (1.13) was installed successfully
- changing role ansible_role_vector from  to unspecified
- extracting ansible_role_vector to /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_vector
- ansible_role_vector was installed successfully
INFO     Dependency completed successfully.
Starting galaxy collection install process
Process install dependency map
Starting collection install process
Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/ansible-posix-1.5.4.tar.gz to /home/nedorezov/.ansible/tmp/ansible-local-56082827dzdp_2/tmpubwwq4iv/ansible-posix-1.5.4-t6_9j5ar
Installing 'ansible.posix:1.5.4' to '/home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/collections/ansible_collections/ansible/posix'
ansible.posix:1.5.4 was installed successfully
Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/community-docker-3.5.0.tar.gz to /home/nedorezov/.ansible/tmp/ansible-local-56082827dzdp_2/tmpubwwq4iv/community-docker-3.5.0-n1kzj45g
Installing 'community.docker:3.5.0' to '/home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/collections/ansible_collections/community/docker'
community.docker:3.5.0 was installed successfully
Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/community-general-8.1.0.tar.gz to /home/nedorezov/.ansible/tmp/ansible-local-56082827dzdp_2/tmpubwwq4iv/community-general-8.1.0-be4vhj4y
Installing 'community.general:8.1.0' to '/home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/collections/ansible_collections/community/general'
community.general:8.1.0 was installed successfully
INFO     Dependency completed successfully.
INFO     Running fullstack > lint
COMMAND: set -e
ansible-lint . --exclude ./.tox/ --exclude ./.git/


Passed: 0 failure(s), 0 warning(s) on 7 files. Last profile that met the validation criteria was 'production'.
INFO     Running fullstack > cleanup
WARNING  Skipping, cleanup playbook not configured.
INFO     Running fullstack > destroy
INFO     Sanity checks: 'podman'

PLAY [Destroy] *****************************************************************

TASK [Destroy molecule instance(s)] ********************************************
changed: [localhost] => (item={'cgroupns_mode': 'host', 'command': '/sbin/init', 'dockerfile': '../resources/Dockerfile.j2'
, 'groups': ['fullstack'], 'image': 'ubuntu:22.04', 'name': 'fullstack_ubuntu', 'privileged': True, 'volumes': ['/sys/fs/cgroup:/sys/fs/cgroup:rw']})

TASK [Wait for instance(s) deletion to complete] *******************************
FAILED - RETRYING: [localhost]: Wait for instance(s) deletion to complete (300 retries left).
changed: [localhost] => (item={'failed': 0, 'started': 1, 'finished': 0, 'ansible_job_id': 'j156806396190.560884', 'results
_file': '/home/nedorezov/.ansible_async/j156806396190.560884', 'changed': True, 'item': {'cgroupns_mode': 'host', 'command'
: '/sbin/init', 'dockerfile': '../resources/Dockerfile.j2', 'groups': ['fullstack'], 'image': 'ubuntu:22.04', 'name': 'fullstack_ubuntu', 'privileged': True, 'volumes': ['/sys/fs/cgroup:/sys/fs/cgroup:rw']}, 'ansible_loop_var': 'item'})

PLAY RECAP *********************************************************************
localhost                  : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

INFO     Running fullstack > syntax

playbook: /home/nedorezov/ansible_role_lighthouse/molecule/fullstack/converge.yml
INFO     Running fullstack > create

PLAY [Create] ******************************************************************

TASK [get podman executable path] **********************************************
ok: [localhost]

TASK [save path to executable as fact] *****************************************
ok: [localhost]

TASK [Log into a container registry] *******************************************
skipping: [localhost] => (item="fullstack_ubuntu registry username: None specified")
skipping: [localhost]

TASK [Check presence of custom Dockerfiles] ************************************
ok: [localhost] => (item=Dockerfile: ../resources/Dockerfile.j2)

TASK [Create Dockerfiles from image names] *************************************
ok: [localhost] => (item="Dockerfile: ../resources/Dockerfile.j2; Image: ubuntu:22.04")

TASK [Discover local Podman images] ********************************************
ok: [localhost] => (item=fullstack_ubuntu)

TASK [Build an Ansible compatible image] ***************************************
changed: [localhost] => (item=ubuntu:22.04)

TASK [Determine the CMD directives] ********************************************
ok: [localhost] => (item="fullstack_ubuntu command: /sbin/init")

TASK [Remove possible pre-existing containers] *********************************
changed: [localhost]

TASK [Discover local podman networks] ******************************************
skipping: [localhost] => (item=fullstack_ubuntu: None specified)
skipping: [localhost]

TASK [Create podman network dedicated to this scenario] ************************
skipping: [localhost]

TASK [Create molecule instance(s)] *********************************************
changed: [localhost] => (item=fullstack_ubuntu)

TASK [Wait for instance(s) creation to complete] *******************************
FAILED - RETRYING: [localhost]: Wait for instance(s) creation to complete (300 retries left).
changed: [localhost] => (item=fullstack_ubuntu)

PLAY RECAP *********************************************************************
localhost                  : ok=10   changed=4    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0

INFO     Running fullstack > prepare
WARNING  Skipping, prepare playbook not configured.
INFO     Running fullstack > converge

PLAY [Converge Clickhouse + Lighthouse] ****************************************

TASK [Gathering Facts] *********************************************************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Include OS Family Specific Variables] **********
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/precheck.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Requirements check | Checking sse4_2 support] ***
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Requirements check | Not supported distribution && release] ***
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/params.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Set clickhouse_service_enable] *****************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Set clickhouse_service_ensure] *****************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/install/apt.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Install by APT | Apt-key add repo key] *********
changed: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Install by APT | Remove old repo] **************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Install by APT | Repo installation] ************
--- before: /dev/null
+++ after: /etc/apt/sources.list.d/packages_clickhouse_com_deb.list
@@ -0,0 +1 @@
+deb https://packages.clickhouse.com/deb stable main

changed: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Install by APT | Package installation] *********
Suggested packages:
  clickhouse-common-static-dbg
The following NEW packages will be installed:
  clickhouse-client clickhouse-common-static clickhouse-server
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
changed: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Install by APT | Package installation] *********
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Hold specified version during APT upgrade | Package installation] ***
--- before
+++ after: /etc/apt/preferences.d/fixed-clickhouse-client
@@ -0,0 +1,3 @@
+Package: clickhouse-client
+Pin: release a=now
+Pin-Priority: 1001

changed: [fullstack_ubuntu] => (item=clickhouse-client)
--- before
+++ after: /etc/apt/preferences.d/fixed-clickhouse-server
@@ -0,0 +1,3 @@
+Package: clickhouse-server
+Pin: release a=now
+Pin-Priority: 1001

changed: [fullstack_ubuntu] => (item=clickhouse-server)
--- before
+++ after: /etc/apt/preferences.d/fixed-clickhouse-common-static
@@ -0,0 +1,3 @@
+Package: clickhouse-common-static
+Pin: release a=now
+Pin-Priority: 1001

changed: [fullstack_ubuntu] => (item=clickhouse-common-static)

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/configure/sys.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Check clickhouse config, data and logs] ********
ok: [fullstack_ubuntu] => (item=/var/log/clickhouse-server)
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "mode": "0700",
+    "mode": "0770",
     "path": "/etc/clickhouse-server"
 }

changed: [fullstack_ubuntu] => (item=/etc/clickhouse-server)
--- before
+++ after
@@ -1,7 +1,7 @@
 {
-    "group": 0,
-    "mode": "0755",
-    "owner": 0,
+    "group": 999,
+    "mode": "0770",
+    "owner": 999,
     "path": "/var/lib/clickhouse/tmp/",
-    "state": "absent"
+    "state": "directory"
 }

changed: [fullstack_ubuntu] => (item=/var/lib/clickhouse/tmp/)
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "mode": "0700",
+    "mode": "0770",
     "path": "/var/lib/clickhouse/"
 }

changed: [fullstack_ubuntu] => (item=/var/lib/clickhouse/)

TASK [ansible_role_clickhouse : Config | Create config.d folder] ***************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "mode": "0500",
+    "mode": "0770",
     "path": "/etc/clickhouse-server/config.d"
 }

changed: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Create users.d folder] ****************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "mode": "0500",
+    "mode": "0770",
     "path": "/etc/clickhouse-server/users.d"
 }

changed: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate system config] ***************
--- before
+++ after: /home/nedorezov/.ansible/tmp/ansible-local-561495_0674zsu/tmph19wsw5p/config.j2
@@ -0,0 +1,382 @@
+<?xml version="1.0"?>
+<!--
+ -
+ - Ansible managed: Do NOT edit this file manually!
+ -
+-->
+<clickhouse>
+    <logger>
+        <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 -->
+        <level>trace</level>
+        <log>/var/log/clickhouse-server/clickhouse-server.log</log>
+        <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
+        <size>1000M</size>
+        <count>10</count>
+    </logger>
+
+    <http_port>8123</http_port>
+
+    <tcp_port>9000</tcp_port>
+
+    <!-- Used with https_port and tcp_port_secure. Full ssl options list: https://github.com/ClickHouse-Extras/poco/blob/master/NetSSL_OpenSSL/include/Poco/Net/SSLManager.h#L71 -->
+    <openSSL>
+        <server> <!-- Used for https server AND secure tcp port -->
+            <!-- openssl req -subj "/CN=localhost" -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /etc/clickhouse-server/server.key -out /etc/clickhouse-server/server.crt -->
+            <certificateFile>/etc/clickhouse-server/server.crt</certificateFile>
+            <privateKeyFile>/etc/clickhouse-server/server.key</privateKeyFile>
+            <!-- openssl dhparam -out /etc/clickhouse-server/dhparam.pem 4096 -->
+            <dhParamsFile>/etc/clickhouse-server/dhparam.pem</dhParamsFile>
+            <verificationMode>none</verificationMode>
+            <loadDefaultCAFile>true</loadDefaultCAFile>
+            <cacheSessions>true</cacheSessions>
+            <disableProtocols>sslv2,sslv3</disableProtocols>
+            <preferServerCiphers>true</preferServerCiphers>
+        </server>
+
+        <client> <!-- Used for connecting to https dictionary source -->
+            <loadDefaultCAFile>true</loadDefaultCAFile>
+            <cacheSessions>true</cacheSessions>
+            <disableProtocols>sslv2,sslv3</disableProtocols>
+            <preferServerCiphers>true</preferServerCiphers>
+            <!-- Use for self-signed: <verificationMode>none</verificationMode> -->
+            <invalidCertificateHandler>
+                <!-- Use for self-signed: <name>AcceptCertificateHandler</name> -->
+                <name>RejectCertificateHandler</name>
+            </invalidCertificateHandler>
+        </client>
+    </openSSL>
+
+    <!-- Default root page on http[s] server. For example load UI from https://tabix.io/ when opening http://localhost:8123 -->
+    <!--
+    <http_server_default_response><![CDATA[<html ng-app="SMI2"><head><base href="http://ui.tabix.io/"></head><body><div ui
-view="" class="content-ui"></div><script src="http://loader.tabix.io/master.js"></script></body></html>]]></http_server_default_response>
+    -->
+
+    <!-- Port for communication between replicas. Used for data exchange. -->
+    <interserver_http_port>9009</interserver_http_port>
+
+
+
+    <!-- Hostname that is used by other replicas to request this server.
+         If not specified, than it is determined analoguous to 'hostname -f' command.
+         This setting could be used to switch replication to another network interface.
+      -->
+    <!--
+    <interserver_http_host>example.clickhouse.com</interserver_http_host>
+    -->
+
+    <!-- Listen specified host. use :: (wildcard IPv6 address), if you want to accept connections both with IPv4 and IPv6 from everywhere. -->
+    <!-- <listen_host>::</listen_host> -->
+    <!-- Same for hosts with disabled ipv6: -->
+    <!-- <listen_host>0.0.0.0</listen_host> -->
+    <listen_host>::</listen_host>
+
+    <max_connections>2048</max_connections>
+    <keep_alive_timeout>3</keep_alive_timeout>
+
+    <!-- Maximum number of concurrent queries. -->
+    <max_concurrent_queries>100</max_concurrent_queries>
+
+    <!-- Set limit on number of open files (default: maximum). This setting makes sense on Mac OS X because getrlimit() fails to retrieve
+         correct maximum value. -->
+    <!-- <max_open_files>262144</max_open_files> -->
+
+    <!-- Size of cache of uncompressed blocks of data, used in tables of MergeTree family.
+         In bytes. Cache is single for server. Memory is allocated only on demand.
+         Cache is used when 'use_uncompressed_cache' user setting turned on (off by default).
+         Uncompressed cache is advantageous only for very short queries and in rare cases.
+      -->
+    <uncompressed_cache_size>8589934592</uncompressed_cache_size>
+
+    <!-- Approximate size of mark cache, used in tables of MergeTree family.
+         In bytes. Cache is single for server. Memory is allocated only on demand.
+         You should not lower this value.
+      -->
+    <mark_cache_size>5368709120</mark_cache_size>
+
+
+    <!-- Path to data directory, with trailing slash. -->
+    <path>/var/lib/clickhouse/</path>
+
+    <!-- Path to temporary data for processing hard queries. -->
+    <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>
+
+    <!-- Directory with user provided files that are accessible by 'file' table function. -->
+    <user_files_path>/var/lib/clickhouse/user_files/</user_files_path>
+
+    <!-- Path to configuration file with users, access rights, profiles of settings, quotas. -->
+    <users_config>users.xml</users_config>
+
+    <!-- Default profile of settings. -->
+    <default_profile>default</default_profile>
+
+    <!-- System profile of settings. This settings are used by internal processes (Buffer storage, Distibuted DDL worker and so on). -->
+    <!-- <system_profile>default</system_profile> -->
+
+    <!-- Default database. -->
+    <default_database>default</default_database>
+
+    <!-- Server time zone could be set here.
+
+         Time zone is used when converting between String and DateTime types,
+          when printing DateTime in text formats and parsing DateTime from text,
+          it is used in date and time related functions, if specific time zone was not passed as an argument.
+
+         Time zone is specified as identifier from IANA time zone database, like UTC or Africa/Abidjan.
+         If not specified, system time zone at server startup is used.
+
+         Please note, that server could display time zone alias instead of specified name.
+         Example: W-SU is an alias for Europe/Moscow and Zulu is an alias for UTC.
+    -->
+    <!-- <timezone>Europe/Moscow</timezone> -->
+
+    <!-- You can specify umask here (see "man umask"). Server will apply it on startup.
+         Number is always parsed as octal. Default umask is 027 (other users cannot read logs, data files, etc; group can only read).
+    -->
+    <!-- <umask>022</umask> -->
+
+    <!-- Perform mlockall after startup to lower first queries latency
+          and to prevent clickhouse executable from being paged out under high IO load.
+         Enabling this option is recommended but will lead to increased startup time for up to a few seconds.
+    -->
+    <mlock_executable>False</mlock_executable>
+
+    <!-- Configuration of clusters that could be used in Distributed tables.
+         https://clickhouse.com/docs/en/engines/table-engines/special/distributed/
+      -->
+    <remote_servers incl="clickhouse_remote_servers" />
+
+
+    <!-- If element has 'incl' attribute, then for it's value will be used corresponding substitution from another file.
+         By default, path to file with substitutions is /etc/metrika.xml. It could be changed in config in 'include_from' element.
+         Values for substitutions are specified in /clickhouse/name_of_substitution elements in that file.
+      -->
+
+    <!-- ZooKeeper is used to store metadata about replicas, when using Replicated tables.
+         Optional. If you don't use replicated tables, you could omit that.
+
+         See https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/replication/
+      -->
+    <zookeeper incl="zookeeper-servers" optional="true" />
+
+    <!-- Substitutions for parameters of replicated tables.
+          Optional. If you don't use replicated tables, you could omit that.
+         See https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/replication/#creating-replicated-tables
+      -->
+    <macros incl="macros" optional="true" />
+
+
+    <!-- Reloading interval for embedded dictionaries, in seconds. Default: 3600. -->
+    <builtin_dictionaries_reload_interval>3600</builtin_dictionaries_reload_interval>
+
+    <!-- If true, dictionaries are created lazily on first use. Otherwise they are initialised on server startup. Default: true -->
+    <!-- See also: https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#server_configuration_parameters-dictionaries_lazy_load -->
+    <dictionaries_lazy_load>True</dictionaries_lazy_load>
+
+    <!-- Maximum session timeout, in seconds. Default: 3600. -->
+    <max_session_timeout>3600</max_session_timeout>
+
+    <!-- Default session timeout, in seconds. Default: 60. -->
+    <default_session_timeout>60</default_session_timeout>
+
+    <!-- Sending data to Graphite for monitoring. Several sections can be defined. -->
+    <!--
+        interval - send every X second
+        root_path - prefix for keys
+        hostname_in_path - append hostname to root_path (default = true)
+        metrics - send data from table system.metrics
+        events - send data from table system.events
+        asynchronous_metrics - send data from table system.asynchronous_metrics
+    -->
+    <!--
+    <graphite>
+        <host>localhost</host>
+        <port>42000</port>
+        <timeout>0.1</timeout>
+        <interval>60</interval>
+        <root_path>one_min</root_path>
+        <hostname_in_path>true</hostname_in_path>
+
+        <metrics>true</metrics>
+        <events>true</events>
+        <asynchronous_metrics>true</asynchronous_metrics>
+    </graphite>
+    <graphite>
+        <host>localhost</host>
+        <port>42000</port>
+        <timeout>0.1</timeout>
+        <interval>1</interval>
+        <root_path>one_sec</root_path>
+
+        <metrics>true</metrics>
+        <events>true</events>
+        <asynchronous_metrics>false</asynchronous_metrics>
+    </graphite>
+    -->
+
+
+    <!-- Query log. Used only for queries with setting log_queries = 1. -->
+    <query_log>
+        <!-- What table to insert data. If table is not exist, it will be created.
+             When query log structure is changed after system update,
+              then old table will be renamed and new table will be created automatically.
+        -->
+        <database>system</database>
+        <table>query_log</table>
+        <!--
+            PARTITION BY expr https://clickhouse.com/docs/en/table_engines/mergetree-family/custom_partitioning_key/
+            Example:
+                event_date
+                toMonday(event_date)
+                toYYYYMM(event_date)
+                toStartOfHour(event_time)
+        -->
+        <partition_by>toYYYYMM(event_date)</partition_by>
+        <!-- Interval of flushing data. -->
+        <flush_interval_milliseconds>7500</flush_interval_milliseconds>
+    </query_log>
+
+    <!-- Query thread log. Has information about all threads participated in query execution.
+         Used only for queries with setting log_query_threads = 1. -->
+    <query_thread_log>
+        <database>system</database>
+        <table>query_thread_log</table>
+        <partition_by>toYYYYMM(event_date)</partition_by>
+
+        <flush_interval_milliseconds>7500</flush_interval_milliseconds>
+    </query_thread_log>
+
+    <!-- Uncomment if use part log.
+         Part log contains information about all actions with parts in MergeTree tables (creation, deletion, merges, downloads).
+    <part_log>
+        <database>system</database>
+        <table>part_log</table>
+        <flush_interval_milliseconds>7500</flush_interval_milliseconds>
+    </part_log>
+    -->
+
+
+    <!-- Parameters for embedded dictionaries, used in Yandex.Metrica.
+         See https://clickhouse.com/docs/en/dicts/internal_dicts/
+    -->
+
+    <!-- Path to file with region hierarchy. -->
+    <!-- <path_to_regions_hierarchy_file>/opt/geo/regions_hierarchy.txt</path_to_regions_hierarchy_file> -->
+
+    <!-- Path to directory with files containing names of regions -->
+    <!-- <path_to_regions_names_files>/opt/geo/</path_to_regions_names_files> -->
+
+
+    <!-- Configuration of external dictionaries. See:
+         https://clickhouse.com/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts
+    -->
+    <dictionaries_config>*_dictionary.xml</dictionaries_config>
+
+    <!-- Uncomment if you want data to be compressed 30-100% better.
+         Don't do that if you just started using ClickHouse.
+      -->
+    <compression incl="clickhouse_compression">
+    <!--
+        <!- - Set of variants. Checked in order. Last matching case wins. If nothing matches, lz4 will be used. - ->
+        <case>
+
+            <!- - Conditions. All must be satisfied. Some conditions may be omitted. - ->
+            <min_part_size>10000000000</min_part_size>        <!- - Min part size in bytes. - ->
+            <min_part_size_ratio>0.01</min_part_size_ratio>   <!- - Min size of part relative to whole table size. - ->
+
+            <!- - What compression method to use. - ->
+            <method>zstd</method>
+        </case>
+    -->
+    </compression>
+
+    <!-- Allow to execute distributed DDL queries (CREATE, DROP, ALTER, RENAME) on cluster.
+         Works only if ZooKeeper is enabled. Comment it if such functionality isn't required. -->
+    <distributed_ddl>
+        <!-- Path in ZooKeeper to queue with DDL queries -->
+        <path>/clickhouse/task_queue/ddl</path>
+
+        <!-- Settings from this profile will be used to execute DDL queries -->
+        <!-- <profile>default</profile> -->
+    </distributed_ddl>
+
+    <!-- Settings to fine tune MergeTree tables. See documentation in source code, in MergeTreeSettings.h -->
+        <merge_tree>
+        </merge_tree>
+
+    <!-- Protection from accidental DROP.
+         If size of a MergeTree table is greater than max_table_size_to_drop (in bytes) than table could not be dropped with any DROP query.
+         If you want do delete one table and don't want to restart clickhouse-server, you could create special file <clickhouse-path>/flags/force_drop_table and make DROP once.
+         By default max_table_size_to_drop is 50GB; max_table_size_to_drop=0 allows to DROP any tables.
+         The same for max_partition_size_to_drop.
+         Uncomment to disable protection.
+    -->
+    <!-- <max_table_size_to_drop>0</max_table_size_to_drop> -->
+    <!-- <max_partition_size_to_drop>0</max_partition_size_to_drop> -->
+
+    <!-- Example of parameters for GraphiteMergeTree table engine -->
+    <graphite_rollup_example>
+        <pattern>
+            <regexp>click_cost</regexp>
+            <function>any</function>
+            <retention>
+                <age>0</age>
+                <precision>3600</precision>
+            </retention>
+            <retention>
+                <age>86400</age>
+                <precision>60</precision>
+            </retention>
+        </pattern>
+        <default>
+            <function>max</function>
+            <retention>
+                <age>0</age>
+                <precision>60</precision>
+            </retention>
+            <retention>
+                <age>3600</age>
+                <precision>300</precision>
+            </retention>
+            <retention>
+                <age>86400</age>
+                <precision>3600</precision>
+            </retention>
+        </default>
+    </graphite_rollup_example>
+
+
+    <!-- Exposing metrics data for scraping from Prometheus. -->
+    <!--
+        endpoint – HTTP endpoint for scraping metrics by prometheus server. Start from ‘/’.
+        port – Port for endpoint.
+        metrics – Flag that sets to expose metrics from the system.metrics table.
+        events – Flag that sets to expose metrics from the system.events table.
+        asynchronous_metrics – Flag that sets to expose current metrics values from the system.asynchronous_metrics table.
+    -->
+    <!--
+    <prometheus>
+        <endpoint>/metrics</endpoint>
+        <port>8001</port>
+        <metrics>true</metrics>
+        <events>true</events>
+        <asynchronous_metrics>true</asynchronous_metrics>
+    </prometheus>
+    -->
+
+
+    <!-- Directory in <clickhouse-path> containing schema files for various input formats.
+         The directory will be created if it doesn't exist.
+      -->
+    <format_schema_path>/var/lib/clickhouse//format_schemas/</format_schema_path>
+
+    <!-- Uncomment to disable ClickHouse internal DNS caching. -->
+    <!-- <disable_internal_dns_cache>1</disable_internal_dns_cache> -->
+
+    <kafka>
+    </kafka>
+
+
+
+
+
+</clickhouse>

changed: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate users config] ****************
--- before
+++ after: /home/nedorezov/.ansible/tmp/ansible-local-561495_0674zsu/tmpx5bjhcz3/users.j2
@@ -0,0 +1,65 @@
+<?xml version="1.0"?>
+<!--
+ -
+ - Ansible managed: Do NOT edit this file manually!
+ -
+-->
+<clickhouse>
+   <profiles>
+    <!-- Profiles of settings. -->
+    <!-- Default profiles. -->
+        <default>
+            <max_memory_usage>10000000000</max_memory_usage>
+            <use_uncompressed_cache>0</use_uncompressed_cache>
+            <load_balancing>random</load_balancing>
+            <max_partitions_per_insert_block>100</max_partitions_per_insert_block>
+        </default>
+        <readonly>
+            <readonly>1</readonly>
+        </readonly>
+        <!-- Default profiles end. -->
+    <!-- Custom profiles. -->
+        <!-- Custom profiles end. -->
+    </profiles>
+
+    <!-- Users and ACL. -->
+    <users>
+    <!-- Default users. -->
+            <!-- Default user for login if user not defined -->
+        <default>
+                <password></password>
+                <networks incl="networks" replace="replace">
+                <ip>::/0</ip>
+                <ip>127.0.0.1</ip>
+                </networks>
+        <profile>default</profile>
+        <quota>default</quota>
+            </default>
+            <!-- Example of user with readonly access -->
+        <readonly>
+                <password></password>
+                <networks incl="networks" replace="replace">
+                <ip>::/0</ip>
+                <ip>127.0.0.1</ip>
+                </networks>
+        <profile>readonly</profile>
+        <quota>default</quota>
+            </readonly>
+        <!-- Custom users. -->
+        </users>
+
+    <!-- Quotas. -->
+    <quotas>
+        <!-- Default quotas. -->
+        <default>
+        <interval>
+        <duration>3600</duration>
+        <queries>0</queries>
+        <errors>0</errors>
+        <result_rows>0</result_rows>
+        <read_rows>0</read_rows>
+        <execution_time>0</execution_time>
+    </interval>
+        </default>
+            </quotas>
+</clickhouse>

changed: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate remote_servers config] *******
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate macros config] ***************
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate zookeeper servers config] ****
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Fix interserver_http_port and intersever_https_port collision] ***
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Notify Handlers Now] ***************************

RUNNING HANDLER [ansible_role_clickhouse : Restart Clickhouse Service] *********
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/service.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Ensure clickhouse-server.service is enabled: True and state: restarted] ***
changed: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Wait for Clickhouse Server to Become Ready] ****
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/configure/db.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Set ClickHose Connection String] ***************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Gather list of existing databases] *************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Delete database config] ***************
skipping: [fullstack_ubuntu] => (item={'name': 'logs'})
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Create database config] ***************
changed: [fullstack_ubuntu] => (item={'name': 'logs'})

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/configure/dict.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Config | Generate dictionary config] ***********
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
skipping: [fullstack_ubuntu]

TASK [nginx : Validate distribution and role variables] ************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/validate/validate.yml for fullstack_ubuntu

TASK [nginx : Check whether you are using a supported NGINX distribution] ******
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: {{ ansible_facts['distribution'] |
lower in nginx_distributions.keys() | list }}
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: {{
(ansible_facts['distribution_version'] | regex_search('\d{1,2}\.\d{2}') | float
in nginx_distributions[ansible_facts['distribution'] | lower]['versions'] |
map('float')) if ansible_facts['distribution'] | lower in ['alpine', 'ubuntu']
else ansible_facts['distribution_major_version'] in
nginx_distributions[ansible_facts['distribution'] | lower]['versions'] | string
}}
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: {{ ansible_facts['architecture'] in
nginx_distributions[ansible_facts['distribution'] | lower]['architectures'] }}
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "Your distribution, Ubuntu 22.04 (x86_64), is supported by NGINX Open Source."
}

TASK [nginx : Check that 'nginx_setup' is an allowed value] ********************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [nginx : Check that 'nginx_branch' is an allowed value] *******************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [nginx : Check that 'nginx_install_from' is an allowed value] *************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [nginx : Set up prerequisites] ********************************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/prerequisites/prerequisites.yml for fullstack_ubuntu

TASK [nginx : Install dependencies] ********************************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/prerequisites/install-dependencies.yml for fullstack_ubuntu

TASK [nginx : (Alpine Linux) Install dependencies] *****************************
skipping: [fullstack_ubuntu]

TASK [nginx : (Debian/Ubuntu) Install dependencies] ****************************
The following NEW packages will be installed:
  apt-transport-https
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
changed: [fullstack_ubuntu]

TASK [nginx : (Amazon Linux/CentOS/Oracle Linux/RHEL) Install dependencies] ****
skipping: [fullstack_ubuntu]

TASK [nginx : (SLES) Install dependencies] *************************************
skipping: [fullstack_ubuntu]

TASK [nginx : (FreeBSD) Install dependencies using package(s)] *****************
skipping: [fullstack_ubuntu]

TASK [nginx : (FreeBSD) Install dependencies using port(s)] ********************
skipping: [fullstack_ubuntu] => (item=security/ca_root_nss)
skipping: [fullstack_ubuntu]

TASK [nginx : Check if SELinux is enabled] *************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Configure SELinux] ***********************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Set up signing keys] *********************************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/keys/setup-keys.yml for fullstack_ubuntu

TASK [nginx : (Alpine Linux) Set up NGINX signing key URL] *********************
skipping: [fullstack_ubuntu]

TASK [nginx : (Alpine Linux) Download NGINX signing key] ***********************
skipping: [fullstack_ubuntu]

TASK [nginx : (Debian/Red Hat/SLES OSs) Set up NGINX signing key URL] **********
ok: [fullstack_ubuntu]

TASK [nginx : (Debian/Ubuntu) Add NGINX signing key] ***************************
changed: [fullstack_ubuntu]

TASK [nginx : (Red Hat/SLES OSs) Add NGINX signing key] ************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX Open Source] ***************************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/opensource/install-oss.yml for fullstack_ubuntu

TASK [nginx : Install NGINX from the official package repository] **************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/opensource/install-debian.yml for fullstack_ubuntu

TASK [nginx : (Debian/Ubuntu) Configure NGINX repository] **********************
--- before: /dev/null
+++ after: /etc/apt/sources.list.d/nginx.list
@@ -0,0 +1 @@
+deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://nginx.org/packages/mainline/ubuntu/ jammy nginx

changed: [fullstack_ubuntu] => (item=deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://nginx.org/packages/mainline/ubuntu/ jammy nginx)
changed: [fullstack_ubuntu] => (item=deb-src [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://nginx.org/packages/mainline/ubuntu/ jammy nginx)

TASK [nginx : (Debian/Ubuntu) Pin NGINX repository] ****************************
--- before: /etc/apt/preferences.d/99nginx (content)
+++ after: /etc/apt/preferences.d/99nginx (content)
@@ -0,0 +1,6 @@
+# BEGIN ANSIBLE MANAGED BLOCK
+Package: *
+Pin: origin nginx.org
+Pin: release o=nginx
+Pin-Priority: 900
+# END ANSIBLE MANAGED BLOCK

changed: [fullstack_ubuntu]

TASK [nginx : (Debian/Ubuntu) Install NGINX] ***********************************
The following additional packages will be installed:
  libpopt0 logrotate
Suggested packages:
  bsd-mailx | mailx
The following NEW packages will be installed:
  libpopt0 logrotate nginx
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
changed: [fullstack_ubuntu]

TASK [nginx : Install NGINX from the distribution's package repository] ********
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX from source] ***************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX in Unix systems] ***********************************
skipping: [fullstack_ubuntu]

TASK [nginx : Set up NGINX Plus license] ***************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX Plus] **********************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX dynamic modules] ***********************************
skipping: [fullstack_ubuntu]

TASK [nginx : Remove NGINX Plus license] ***************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Modify systemd parameters] ***************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Trigger handlers if necessary] ***********************************

RUNNING HANDLER [nginx : (Handler) Start/reload NGINX] *************************
changed: [fullstack_ubuntu]

RUNNING HANDLER [nginx : (Handler) Check NGINX] ********************************
ok: [fullstack_ubuntu]

RUNNING HANDLER [nginx : (Handler) Print NGINX error if syntax check fails] ****
skipping: [fullstack_ubuntu]

TASK [nginx : Debug NGINX output] **********************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Configure logrotate for NGINX] ***********************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX Amplify] *******************************************
skipping: [fullstack_ubuntu]

TASK [ansible_role_lighthouse : INSTALL | Create bin and data directory] *******
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/var/www/lighthouse",
-    "state": "absent"
+    "state": "directory"
 }

changed: [fullstack_ubuntu]

TASK [ansible_role_lighthouse : INSTALL | Get from source] *********************
>> Newly checked out d701335c25cd1bb9b5155711190bad8ab852c2ce
changed: [fullstack_ubuntu]

TASK [ansible_role_lighthouse : INSTALL | Create Lighthouse config] ************
--- before: /etc/nginx/conf.d/default.conf
+++ after: /home/nedorezov/.ansible/tmp/ansible-local-561495_0674zsu/tmpzpc02hj1/lighthouse.conf.j2
@@ -1,44 +1,8 @@
 server {
-    listen       80;
-    server_name  localhost;
-
-    #access_log  /var/log/nginx/host.access.log  main;
+    listen 80;

     location / {
-        root   /usr/share/nginx/html;
-        index  index.html index.htm;
+        root /var/www/lighthouse;
+        index index.html;
     }
-
-    #error_page  404              /404.html;
-
-    # redirect server error pages to the static page /50x.html
-    #
-    error_page   500 502 503 504  /50x.html;
-    location = /50x.html {
-        root   /usr/share/nginx/html;
-    }
-
-    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
-    #
-    #location ~ \.php$ {
-    #    proxy_pass   http://127.0.0.1;
-    #}
-
-    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
-    #
-    #location ~ \.php$ {
-    #    root           html;
-    #    fastcgi_pass   127.0.0.1:9000;
-    #    fastcgi_index  index.php;
-    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
-    #    include        fastcgi_params;
-    #}
-
-    # deny access to .htaccess files, if Apache's document root
-    # concurs with nginx's one
-    #
-    #location ~ /\.ht {
-    #    deny  all;
-    #}
-}
-
+}
\ No newline at end of file

changed: [fullstack_ubuntu]

RUNNING HANDLER [ansible_role_lighthouse : HANDLER | Reload nginx config] ******
changed: [fullstack_ubuntu]

TASK [Extra Config | Gather list of existing tables in logs db] ****************
ok: [fullstack_ubuntu]

TASK [Extra Config | debug tables list] ****************************************
ok: [fullstack_ubuntu] => {
    "existing_tables": {
        "changed": false,
        "cmd": [
            "clickhouse-client",
            "-h",
            "127.0.0.1",
            "--port",
            "9000",
            "-q",
            "SHOW tables FROM logs"
        ],
        "delta": "0:00:00.055418",
        "end": "2023-12-31 11:01:16.158165",
        "failed": false,
        "msg": "",
        "rc": 0,
        "start": "2023-12-31 11:01:16.102747",
        "stderr": "",
        "stderr_lines": [],
        "stdout": "",
        "stdout_lines": []
    }
}

TASK [Extra Config | Create table if not exists] *******************************
changed: [fullstack_ubuntu]

PLAY [Converge Vector] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [fullstack_ubuntu]

TASK [ansible_role_vector : INSTALL | Ensure group "vector" exists] ************
changed: [fullstack_ubuntu]

TASK [ansible_role_vector : INSTALL | Add the user 'vector' with a bash shell, appending the group 'vector' and groups for scraping] ***
changed: [fullstack_ubuntu]

TASK [ansible_role_vector : INSTALL | Install distr from repo] *****************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_vector/tasks/install/apt.yml for fullstack_ubuntu

TASK [ansible_role_vector : APT | Install Vector deb from a remote repo (apt)] ***
Selecting previously unselected package vector.
(Reading database ... 14949 files and directories currently installed.)
Preparing to unpack .../vector_0.34.1-1_amd64hq_ow1s3.deb ...
Unpacking vector (0.34.1-1) ...
Setting up vector (0.34.1-1) ...
systemd-journal:x:101:
changed: [fullstack_ubuntu]

TASK [ansible_role_vector : CONFIG | Set Vector config from template] **********
--- before: /etc/vector/vector.yaml
+++ after: /home/nedorezov/.ansible/tmp/ansible-local-561495_0674zsu/tmphz_fn0ta/default.vector.yaml.j2
@@ -1,47 +1,30 @@
-#                                    __   __  __
-#                                    \ \ / / / /
-#                                     \ V / / /
-#                                      \_/  \/
-#
-#                                    V E C T O R
-#                                   Configuration
-#
-# ------------------------------------------------------------------------------
-# Website: https://vector.dev
-# Docs: https://vector.dev/docs
-# Chat: https://chat.vector.dev
-# ------------------------------------------------------------------------------
+data_dir: "/var/lib/vector"

-# Change this to use a non-default directory for Vector data storage:
-# data_dir: "/var/lib/vector"
+api:
+  enabled: true
+  address: "0.0.0.0:8686"

-# Random Syslog-formatted logs
 sources:
-  dummy_logs:
-    type: "demo_logs"
-    format: "syslog"
-    interval: 1
+  var_logs:
+    type: "file"
+    include:
+      - "/var/log/nginx/*.log"
+    ignore_older: 20          # 1 day

-# Parse Syslog logs
-# See the Vector Remap Language reference for more info: https://vrl.dev
-transforms:
-  parse_logs:
-    type: "remap"
-    inputs: ["dummy_logs"]
-    source: |
-      . = parse_syslog!(string!(.message))
+# sinks:
+#   debug:
+#     type: console
+#     inputs:
+#       - var_logs
+#     encoding:
+#       codec: json

-# Print parsed logs to stdout
 sinks:
-  print:
-    type: "console"
-    inputs: ["parse_logs"]
-    encoding:
-      codec: "json"
-
-# Vector's GraphQL API (disabled by default)
-# Uncomment to try it out with the `vector top` command or
-# in your browser at http://localhost:8686
-# api:
-#   enabled: true
-#   address: "127.0.0.1:8686"
+  clickhouse:
+    inputs:
+      - "var_logs"
+    type: "clickhouse"
+    endpoint: "localhost:8123"
+    database: "logs"
+    table: "test"
+    skip_unknown_fields: true
\ No newline at end of file

changed: [fullstack_ubuntu]

TASK [ansible_role_vector : CONFIG | Flush handlers] ***************************

RUNNING HANDLER [ansible_role_vector : HANDLER | Restart vector] ***************
changed: [fullstack_ubuntu]

RUNNING HANDLER [ansible_role_vector : HANDLER | Reload vector] ****************
skipping: [fullstack_ubuntu]

PLAY RECAP *********************************************************************
fullstack_ubuntu           : ok=60   changed=27   unreachable=0    failed=0    skipped=32   rescued=0    ignored=0

INFO     Running fullstack > idempotence

PLAY [Converge Clickhouse + Lighthouse] ****************************************

TASK [Gathering Facts] *********************************************************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Include OS Family Specific Variables] **********
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/precheck.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Requirements check | Checking sse4_2 support] ***
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Requirements check | Not supported distribution && release] ***
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/params.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Set clickhouse_service_enable] *****************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Set clickhouse_service_ensure] *****************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/install/apt.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Install by APT | Apt-key add repo key] *********
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Install by APT | Remove old repo] **************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Install by APT | Repo installation] ************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Install by APT | Package installation] *********
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Install by APT | Package installation] *********
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Hold specified version during APT upgrade | Package installation] ***
ok: [fullstack_ubuntu] => (item=clickhouse-client)
ok: [fullstack_ubuntu] => (item=clickhouse-server)
ok: [fullstack_ubuntu] => (item=clickhouse-common-static)

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/configure/sys.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Check clickhouse config, data and logs] ********
ok: [fullstack_ubuntu] => (item=/var/log/clickhouse-server)
ok: [fullstack_ubuntu] => (item=/etc/clickhouse-server)
ok: [fullstack_ubuntu] => (item=/var/lib/clickhouse/tmp/)
ok: [fullstack_ubuntu] => (item=/var/lib/clickhouse/)

TASK [ansible_role_clickhouse : Config | Create config.d folder] ***************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Create users.d folder] ****************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate system config] ***************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate users config] ****************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate remote_servers config] *******
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate macros config] ***************
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Generate zookeeper servers config] ****
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Fix interserver_http_port and intersever_https_port collision] ***
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Notify Handlers Now] ***************************

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/service.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Ensure clickhouse-server.service is enabled: True and state: started] ***
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Wait for Clickhouse Server to Become Ready] ****
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/configure/db.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Set ClickHose Connection String] ***************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Gather list of existing databases] *************
ok: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Delete database config] ***************
skipping: [fullstack_ubuntu] => (item={'name': 'logs'})
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : Config | Create database config] ***************
skipping: [fullstack_ubuntu] => (item={'name': 'logs'})
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_clickhouse/tasks/configure/dict.yml for fullstack_ubuntu

TASK [ansible_role_clickhouse : Config | Generate dictionary config] ***********
skipping: [fullstack_ubuntu]

TASK [ansible_role_clickhouse : include_tasks] *********************************
skipping: [fullstack_ubuntu]

TASK [nginx : Validate distribution and role variables] ************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/validate/validate.yml for fullstack_ubuntu

TASK [nginx : Check whether you are using a supported NGINX distribution] ******
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: {{ ansible_facts['distribution'] |
lower in nginx_distributions.keys() | list }}
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: {{
(ansible_facts['distribution_version'] | regex_search('\d{1,2}\.\d{2}') | float
in nginx_distributions[ansible_facts['distribution'] | lower]['versions'] |
map('float')) if ansible_facts['distribution'] | lower in ['alpine', 'ubuntu']
else ansible_facts['distribution_major_version'] in
nginx_distributions[ansible_facts['distribution'] | lower]['versions'] | string
}}
[WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: {{ ansible_facts['architecture'] in
nginx_distributions[ansible_facts['distribution'] | lower]['architectures'] }}
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "Your distribution, Ubuntu 22.04 (x86_64), is supported by NGINX Open Source."
}

TASK [nginx : Check that 'nginx_setup' is an allowed value] ********************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [nginx : Check that 'nginx_branch' is an allowed value] *******************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [nginx : Check that 'nginx_install_from' is an allowed value] *************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [nginx : Set up prerequisites] ********************************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/prerequisites/prerequisites.yml for fullstack_ubuntu

TASK [nginx : Install dependencies] ********************************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/prerequisites/install-dependencies.yml for fullstack_ubuntu

TASK [nginx : (Alpine Linux) Install dependencies] *****************************
skipping: [fullstack_ubuntu]

TASK [nginx : (Debian/Ubuntu) Install dependencies] ****************************
ok: [fullstack_ubuntu]

TASK [nginx : (Amazon Linux/CentOS/Oracle Linux/RHEL) Install dependencies] ****
skipping: [fullstack_ubuntu]

TASK [nginx : (SLES) Install dependencies] *************************************
skipping: [fullstack_ubuntu]

TASK [nginx : (FreeBSD) Install dependencies using package(s)] *****************
skipping: [fullstack_ubuntu]

TASK [nginx : (FreeBSD) Install dependencies using port(s)] ********************
skipping: [fullstack_ubuntu] => (item=security/ca_root_nss)
skipping: [fullstack_ubuntu]

TASK [nginx : Check if SELinux is enabled] *************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Configure SELinux] ***********************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Set up signing keys] *********************************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/keys/setup-keys.yml for fullstack_ubuntu

TASK [nginx : (Alpine Linux) Set up NGINX signing key URL] *********************
skipping: [fullstack_ubuntu]

TASK [nginx : (Alpine Linux) Download NGINX signing key] ***********************
skipping: [fullstack_ubuntu]

TASK [nginx : (Debian/Red Hat/SLES OSs) Set up NGINX signing key URL] **********
ok: [fullstack_ubuntu]

TASK [nginx : (Debian/Ubuntu) Add NGINX signing key] ***************************
ok: [fullstack_ubuntu]

TASK [nginx : (Red Hat/SLES OSs) Add NGINX signing key] ************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX Open Source] ***************************************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/opensource/install-oss.yml for fullstack_ubuntu

TASK [nginx : Install NGINX from the official package repository] **************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/nginx/tasks/opensource/install-debian.yml for fullstack_ubuntu

TASK [nginx : (Debian/Ubuntu) Configure NGINX repository] **********************
ok: [fullstack_ubuntu] => (item=deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://nginx.org/packages/mainline/ubuntu/ jammy nginx)
ok: [fullstack_ubuntu] => (item=deb-src [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://nginx.org/packages/mainline/ubuntu/ jammy nginx)

TASK [nginx : (Debian/Ubuntu) Pin NGINX repository] ****************************
ok: [fullstack_ubuntu]

TASK [nginx : (Debian/Ubuntu) Install NGINX] ***********************************
ok: [fullstack_ubuntu]

TASK [nginx : Install NGINX from the distribution's package repository] ********
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX from source] ***************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX in Unix systems] ***********************************
skipping: [fullstack_ubuntu]

TASK [nginx : Set up NGINX Plus license] ***************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX Plus] **********************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX dynamic modules] ***********************************
skipping: [fullstack_ubuntu]

TASK [nginx : Remove NGINX Plus license] ***************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Modify systemd parameters] ***************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Trigger handlers if necessary] ***********************************

TASK [nginx : Debug NGINX output] **********************************************
skipping: [fullstack_ubuntu]

TASK [nginx : Configure logrotate for NGINX] ***********************************
skipping: [fullstack_ubuntu]

TASK [nginx : Install NGINX Amplify] *******************************************
skipping: [fullstack_ubuntu]

TASK [ansible_role_lighthouse : INSTALL | Create bin and data directory] *******
ok: [fullstack_ubuntu]

TASK [ansible_role_lighthouse : INSTALL | Get from source] *********************
ok: [fullstack_ubuntu]

TASK [ansible_role_lighthouse : INSTALL | Create Lighthouse config] ************
ok: [fullstack_ubuntu]

TASK [Extra Config | Gather list of existing tables in logs db] ****************
ok: [fullstack_ubuntu]

TASK [Extra Config | debug tables list] ****************************************
ok: [fullstack_ubuntu] => {
    "existing_tables": {
        "changed": false,
        "cmd": [
            "clickhouse-client",
            "-h",
            "127.0.0.1",
            "--port",
            "9000",
            "-q",
            "SHOW tables FROM logs"
        ],
        "delta": "0:00:00.068332",
        "end": "2023-12-31 11:03:36.482250",
        "failed": false,
        "msg": "",
        "rc": 0,
        "start": "2023-12-31 11:03:36.413918",
        "stderr": "",
        "stderr_lines": [],
        "stdout": "test",
        "stdout_lines": [
            "test"
        ]
    }
}

TASK [Extra Config | Create table if not exists] *******************************
skipping: [fullstack_ubuntu]

PLAY [Converge Vector] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [fullstack_ubuntu]

TASK [ansible_role_vector : INSTALL | Ensure group "vector" exists] ************
ok: [fullstack_ubuntu]

TASK [ansible_role_vector : INSTALL | Add the user 'vector' with a bash shell, appending the group 'vector' and groups for scraping] ***
ok: [fullstack_ubuntu]

TASK [ansible_role_vector : INSTALL | Install distr from repo] *****************
included: /home/nedorezov/.cache/molecule/ansible_role_lighthouse/fullstack/roles/ansible_role_vector/tasks/install/apt.yml for fullstack_ubuntu

TASK [ansible_role_vector : APT | Install Vector deb from a remote repo (apt)] ***
ok: [fullstack_ubuntu]

TASK [ansible_role_vector : CONFIG | Set Vector config from template] **********
ok: [fullstack_ubuntu]

TASK [ansible_role_vector : CONFIG | Flush handlers] ***************************

PLAY RECAP *********************************************************************
fullstack_ubuntu           : ok=53   changed=0    unreachable=0    failed=0    skipped=32   rescued=0    ignored=0

INFO     Idempotence completed successfully.
INFO     Running fullstack > side_effect
WARNING  Skipping, side effect playbook not configured.
INFO     Running fullstack > verify
INFO     Running Ansible Verifier

PLAY [Verify] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [fullstack_ubuntu]

TASK [VERIFY | Gather Local Services] ******************************************
ok: [fullstack_ubuntu]

TASK [VERIFY | Assert Clickhouse Service] **************************************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [VERIFY | Gather list of existing databases] ******************************
ok: [fullstack_ubuntu]

TASK [VERIFY | Assert Test Databases] ******************************************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [VERIFY | Check Vector API (GET /health status 200)] **********************
ok: [fullstack_ubuntu]

TASK [VERIFY | Check Lighthouse (GET status 200)] ******************************
ok: [fullstack_ubuntu]

TASK [VERIFY | Sleep for 15 seconds and continue with play] ********************
ok: [fullstack_ubuntu -> localhost]

TASK [VERIFY | Check logs in db] ***********************************************
ok: [fullstack_ubuntu]

TASK [VERIFY | Output logs in Clickhouse DB received from Vector] **************
ok: [fullstack_ubuntu] => {
    "test_logs.stdout_lines": [
        "127.0.0.1 - - [31/Dec/2023:11:04:11 +0000] \"GET / HTTP/1.1\" 200 6766 \"-\" \"ansible-httpget\" \"-\""
    ]
}

TASK [VERIFY | Assert log lines exists] ****************************************
ok: [fullstack_ubuntu] => {
    "changed": false,
    "msg": "All assertions passed"
}

PLAY RECAP *********************************************************************
fullstack_ubuntu           : ok=11   changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

INFO     Verifier completed successfully.
INFO     Running fullstack > cleanup
WARNING  Skipping, cleanup playbook not configured.
INFO     Running fullstack > destroy

PLAY [Destroy] *****************************************************************

TASK [Destroy molecule instance(s)] ********************************************
changed: [localhost] => (item={'cgroupns_mode': 'host', 'command': '/sbin/init', 'dockerfile': '../resources/Dockerfile.j2'
, 'groups': ['fullstack'], 'image': 'ubuntu:22.04', 'name': 'fullstack_ubuntu', 'privileged': True, 'volumes': ['/sys/fs/cgroup:/sys/fs/cgroup:rw']})

TASK [Wait for instance(s) deletion to complete] *******************************
FAILED - RETRYING: [localhost]: Wait for instance(s) deletion to complete (300 retries left).
changed: [localhost] => (item={'failed': 0, 'started': 1, 'finished': 0, 'ansible_job_id': 'j521430628942.607434', 'results
_file': '/home/nedorezov/.ansible_async/j521430628942.607434', 'changed': True, 'item': {'cgroupns_mode': 'host', 'command'
: '/sbin/init', 'dockerfile': '../resources/Dockerfile.j2', 'groups': ['fullstack'], 'image': 'ubuntu:22.04', 'name': 'fullstack_ubuntu', 'privileged': True, 'volumes': ['/sys/fs/cgroup:/sys/fs/cgroup:rw']}, 'ansible_loop_var': 'item'})

PLAY RECAP *********************************************************************
localhost                  : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

INFO     Pruning extra files from scenario ephemeral directory
nedorezov@controller-0:~/ansible_role_lighthouse$

