worker_processes 4;
worker_rlimit_nofile 8192;
 
events {
  worker_connections  1024;
}

http {
  default_type application/octet-stream;
  log_format json escape=json
  '{'
    '"time_local":"$time_local",'
    '"remote_addr":"$remote_addr",'
    '"remote_user":"$remote_user",'
    '"request":"$request",'
    '"status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent",'
    '"http_x_forwarded_for":"$http_x_forwarded_for",'
    '"upstream_connect_time":"$upstream_connect_time",'
    '"upstream_header_time":"$upstream_header_time",'
    '"upstream_response_time":"$upstream_response_time"'
  '}';
  access_log  /var/log/nginx/access.log json;
  error_log   /var/log/nginx/error.log warn;
  sendfile     on;
  tcp_nopush   on;
  client_body_buffer_size   10M;
  client_max_body_size      10M;

  proxy_max_temp_file_size 0;
  proxy_read_timeout 310s;
  proxy_send_timeout 310s;
  proxy_set_header        Host            $host;
  proxy_set_header        X-Real-IP       $remote_addr;
  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

  upstream storage {
    server storage:9000;
  }

  upstream uploader {
    server uploader:3000;
  }

  upstream security {
    server security:3000;
  }

  server {
    listen  8080;
    server_name   localhost;
    location = /auth {
      internal;
      proxy_pass                        http://security/v1/token/validation;
      proxy_pass_request_body           off;
      proxy_set_header                  Content-Length "";
      proxy_set_header Authorization    $http_authorization;
    }
    location /v1/register {
      proxy_pass       http://security/v1/user;
    }
    location /v1/token {

      proxy_pass       http://security/v1/token;
    }
    location /v1/user {
      if ($http_authorization = '') {
        return 401;
      }
      auth_request        /auth;
      auth_request_set $auth_status $upstream_status;
      proxy_pass       http://security/v1/user;
    }
    location /v1/upload {
      if ($http_authorization = '') {
        return 401;
      }
      auth_request        /auth;
      auth_request_set $auth_status $upstream_status;
      proxy_pass       http://uploader/v1/upload;
    }
    location /v1/images {
      if ($http_authorization = '') {
        return 401;
      }
      auth_request        /auth;
      auth_request_set $auth_status $upstream_status;
      proxy_pass       http://storage/data;
    }
  }

  server {
    listen  8000;

    location = /stub_status {
      stub_status;
    }
  }
}